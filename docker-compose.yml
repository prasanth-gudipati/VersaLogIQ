version: '3.8'

services:
  # VersaLogIQ Backend Service
  versalogiq-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: versalogiq-backend
    ports:
      - "5000:5000"
    volumes:
      # Mount logs directory for persistence
      - ./backend/logs:/app/logs
      # Mount config directory for configuration files
      - ./config:/app/config:ro
    environment:
      - FLASK_ENV=production
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=INFO
    restart: unless-stopped
    networks:
      - versalogiq-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis Service (for future session management and caching)
  redis:
    image: redis:7-alpine
    container_name: versalogiq-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - versalogiq-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Nginx Proxy (for future load balancing and SSL termination)
  nginx:
    image: nginx:alpine
    container_name: versalogiq-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - versalogiq-backend
    restart: unless-stopped
    networks:
      - versalogiq-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

# Named volumes for data persistence
volumes:
  redis-data:
    driver: local

# Network for service communication
networks:
  versalogiq-network:
    driver: bridge